<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qly.mapper.QuestMapper">

	<!-- <select id="getAllQuests" resultType="com.qly.dto.QuestDto"> SELECT 
		QUEST_ID, TITLE, CATEGORY, PHOTO_PATH, STATUS, REG_DATE, (SELECT COUNT(*) 
		FROM QUEST_APPLICATION qa WHERE qa.QUEST_ID = q.QUEST_ID) AS applicantCount 
		FROM QUESTS q ORDER BY CREATED_AT DESC </select> -->

	<select id="getAllQuests" resultType="com.qly.dto.QuestDto">
		SELECT
	   
		QUEST_ID AS questId,
		TITLE,
		CATEGORY,
		PHOTO_PATH AS photoPath,
		STATUS,
		REG_DATE AS regDate,
		(SELECT
		COUNT(*)
		FROM
		QUEST_APPLICATION qa
		WHERE qa.QUEST_ID = q.QUEST_ID)
		AS
		applicantCount
		FROM QUESTS q
		ORDER BY REG_DATE DESC
	</select>


	<update id="updateUserTokens">
		UPDATE USERS
		SET TOTAL_TOKENS = #{totalTokens}
		WHERE
		USER_ID = #{userId}
	</update>


	<insert id="insertQuest" parameterType="com.qly.dto.QuestDto">
		<selectKey keyProperty="questId" order="BEFORE"
			resultType="int">
			SELECT QUESTS_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO QUESTS (
		QUEST_ID, USER_ID, TITLE, CATEGORY, CONTENT,
		PHOTO_PATH, STATUS, PROGRESS,
		LATITUDE, LONGITUDE, ADDRESS, LOCATION,
		START_DATE, END_DATE,
		REWARD_TOKENS
		) VALUES (
		#{questId,
		jdbcType=NUMERIC},
		#{userId, jdbcType=NUMERIC},
		#{title,
		jdbcType=VARCHAR},
		#{category,
		jdbcType=VARCHAR},
		#{content,
		jdbcType=CLOB},
		#{photoPath,
		jdbcType=VARCHAR},
		'대기',
		#{progress,
		jdbcType=NUMERIC},
		#{latitude,
		jdbcType=NUMERIC},
		#{longitude,
		jdbcType=NUMERIC},
		#{address,
		jdbcType=VARCHAR},
		#{location,
		jdbcType=VARCHAR},
		#{startDate,
		jdbcType=DATE},
		#{endDate,
		jdbcType=DATE},
		#{rewardTokens,
		jdbcType=NUMERIC}
		)
	</insert>

	<insert id="insertQuestApplication"
		parameterType="com.qly.dto.QuestDto">
		INSERT INTO QUEST_APPLICATION (
		APPLICATION_ID,
		QUEST_ID,
		USER_ID,
		STATUS,
		APPLIED_AT
		) VALUES (
		QUEST_APPLICATION_SEQ.NEXTVAL,
		#{questId},
		#{userId},
		#{status},
		#{appliedAt}
		)
	</insert>

	<select id="selectQuestById" parameterType="int"
		resultType="com.qly.dto.QuestDto">
		SELECT
		QUEST_ID AS questId,
		TITLE AS title,
		ADDRESS AS
		address,
		REWARD_TOKENS AS rewardTokens,
		PHOTO_PATH AS photoPath
		FROM
		QUESTS
		WHERE QUEST_ID = #{questId}
	</select>




	<insert id="insertUser" parameterType="com.qly.dto.UserDto">
		INSERT INTO USERS (
		USER_ID, USERNAME, PASSWORD, PHONE, EMAIL, ADDRESS, USER_TYPE, TOTAL_TOKENS,
		JOIN_DATE
		) VALUES (
		#{userId, jdbcType=INTEGER},
		#{username, jdbcType=VARCHAR},
		#{password, jdbcType=VARCHAR},
		#{phone, jdbcType=VARCHAR},
		#{email, jdbcType=VARCHAR},
		#{address, jdbcType=VARCHAR},
		#{userType, jdbcType=VARCHAR},
		#{totalTokens, jdbcType=INTEGER},
		SYSDATE
		)
	</insert>





	<select id="QuestTaskDto" resultType="com.qly.dto.QuestTaskDto">
		SELECT * FROM QUEST_TASK
		WHERE QUEST_ID = #{questId}
	</select>

	<select id="getQuestUserId" resultType="com.qly.dto.QuestDto">
		SELECT *
		FROM QUESTS
		WHERE
		USER_ID = #{userId}
		ORDER BY CREATED_AT DESC
	</select>



<select id="getMyQuestList" resultType="com.qly.dto.QuestDto">
  SELECT
    QUEST_ID AS questId,
    USER_ID AS userId,
    TITLE,
    CATEGORY,
    CONTENT,
    PHOTO_PATH AS photoPath,
    PROGRESS,
    LATITUDE,
    LONGITUDE,
    ADDRESS,
    CREATED_AT AS createdAt,
    LOCATION,
    STATUS,
    REWARD_TOKENS AS rewardTokens,
    REG_DATE AS regDate
  FROM QUESTS
  WHERE USER_ID = #{userId}
  ORDER BY REG_DATE DESC
</select>

	<select id="getQuestTasks" resultType="com.qly.dto.QuestTaskDto">
  SELECT
    TASK_ID AS taskId,
    QUEST_ID AS questId,
    DESCRIPTION,
    IS_CHECKED AS isChecked
  FROM QUEST_TASK
  WHERE QUEST_ID = #{questId}
</select>


<update id="resetAllTaskChecks">
    UPDATE QUEST_TASK
    SET IS_CHECKED = '0'
    WHERE QUEST_ID = #{questId}
</update>

<update id="setCheckedTasks">
    UPDATE QUEST_TASK
    SET IS_CHECKED = '1'
    WHERE TASK_ID IN
    <foreach collection="taskIds" item="id" open="(" separator="," close=")">
        #{id}
    </foreach>
</update>


<update id="reduceTokensBy100" parameterType="int">
    UPDATE QUESTS
    SET REWARD_TOKENS = REWARD_TOKENS - 100
    WHERE QUEST_ID = #{questId}
</update>

<select id="heagualList" parameterType="int" resultType="com.qly.dto.QuestDto">
    SELECT TITLE, CATEGORY, REG_DATE
    FROM QUESTS
    WHERE QUEST_ID IN (
        SELECT QUEST_ID
        FROM QUEST_APPLICATION
        WHERE USER_ID = #{userId}
        AND STATUS = '완료'
    )
</select>






</mapper>
